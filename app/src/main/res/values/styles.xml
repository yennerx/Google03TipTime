<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!--Para crear este archivo: Select the res/values directory, right click and select New > Values Resource File.
    You can name your style anything you'd like, but there is a recommended convention. If you inherit from a parent Material style, then name your style in a parallel way by substituting MaterialComponents with your app's name (TipTime). This moves your changes into its own namespace which eliminates the possibility for future conflicts when Material Components introduces new styles. Example:
    Your style name: Widget.TipTime.TextView Inherits from parent style: Widget.MaterialComponents.TextView
    Set the text appearance attribute value to ?attr/textAppearanceBody1. TextAppearance is a set of pre-made styles around text size, fonts, and other properties of text. For other possible text appearances that are provided by Material, see this list of type scales
    *** Para aplicar el nuevo estilo agregar en activity_main.xml esta linea dentro del TextView por ejemplo: style="@style/Widget.TipTime.TextView"-->
    <style name="Widget.TipTime.TextView" parent="Widget.MaterialComponents.TextView">
        <item name="android:minHeight">@dimen/min_text_height</item>
        <item name="android:gravity">center_vertical</item>
        <item name="android:textAppearance">?attr/textAppearanceBody1</item>
    </style>

    <style name="Widget.tipTime.CompoundButton.Switch" parent="Widget.MaterialComponents.CompoundButton.Switch">
        <item name="android:minHeight">@dimen/min_text_height</item>
        <item name="android:gravity">center_vertical</item>
        <item name="android:textAppearance">?attr/textAppearanceBody1</item>
    </style>

    <style name="Widget.TipTime.CompoundButton.RadioButton" parent="Widget.MaterialComponents.CompoundButton.RadioButton">
        <item name="android:paddingStart">8dp</item>
        <item name="android:textAppearance">?attr/textAppearanceBody1</item>
    </style>
</resources>